/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package happybuttons;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Michael Balibrea
 */
public class ResourceManagerFrame extends javax.swing.JDialog {
    DefaultTableModel model;
    String theme = HappyButtons.uiTheme;
    /**
     * Creates new form ResourceManagerFrame
     */
    public ResourceManagerFrame(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        super.setTitle("Resources");
        initComponents();
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/3-this.getSize().height/2);
        
        // set frame icon
        ImageIcon imgIcon = new ImageIcon(HappyButtons.documentsPathDoubleSlash + Utility.strDoubleSlash("\\HappyButtons\\res\\icon\\wave.png"));
        setIconImage(imgIcon.getImage());
        
        tblResources.setAutoCreateRowSorter(true);
        
        setupTheme();
        populateTable();
    }
    
    public void populateTable() {
        File bfolder = new File(HappyButtons.documentsPath + "/HappyButtons/bg/");
        File sfolder = new File(HappyButtons.documentsPath + "/HappyButtons/sfx/");
        
        File[] bFileList = bfolder.listFiles();
        File[] sFileList = sfolder.listFiles();
        
        model = (DefaultTableModel) tblResources.getModel();
        
        String[] arrBGM = new String[bFileList.length];
        for(File f : bFileList) {
            String bgmList = "";
            bgmList = (HappyButtons.dbo).checkBgmInProfiles(HappyButtons.profileDB, Utility.renameListName(f.getName()));
            
            model.insertRow(model.getRowCount(), new Object[]{
                Utility.renameListName(f.getName()), "BGM", bgmList
            });
        }
        
        String[] arrSFX = new String[sFileList.length];
        for(File f : sFileList) {
            String sfxList = "";
            sfxList = (HappyButtons.dbo).checkSfxInProfiles(HappyButtons.profileDB, Utility.renameListName(f.getName()));
            
            model.insertRow(model.getRowCount(), new Object[]{
                Utility.renameListName(f.getName()), "SFX", sfxList
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblResources = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(700, 290));
        setMinimumSize(new java.awt.Dimension(700, 290));

        tblResources.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sound item", "Type", "Used in (Profile)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblResources);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setupTheme() {
        if(theme.equals("light")) {
            this.getContentPane().setBackground(new JDialog().getBackground());
            
            btnDelete.setBackground(new JButton().getBackground());
            btnDelete.setForeground(new JButton().getForeground());
        }
        else if(theme.equals("dark")) {
            this.getContentPane().setBackground(Color.DARK_GRAY);
            
            btnDelete.setBackground(Color.GRAY);
            btnDelete.setForeground(Color.WHITE);
        }
    }
    
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = tblResources.getSelectedRow();
        String selectedItem = "";
        String selectedType = "";
        File filePath = null;
        
        if(selectedRow != -1) {
            int confirmation = JOptionPane.showConfirmDialog(null, 
                    "Are you sure you want to permanently delete selected item(s)?", 
                    "Delete items", 
                    JOptionPane.YES_NO_OPTION, 
                    JOptionPane.WARNING_MESSAGE);
            
            if(confirmation == 0) {
                selectedItem = model.getValueAt(selectedRow, 0).toString();
                selectedType = model.getValueAt(selectedRow, 1).toString();

                String str = "";
                if(selectedType.equals("BGM")) {
                    filePath = new File(HappyButtons.documentsPathDoubleSlash + "\\HappyButtons\\bg\\" + selectedItem + ".wav");
                }
                else if(selectedType.equals("SFX")) {
                    filePath = new File(HappyButtons.documentsPathDoubleSlash + "\\HappyButtons\\sfx\\" + selectedItem + ".wav");
                }

                if(filePath.delete()) {
                    model.removeRow(selectedRow);

                    if(selectedType.equals("BGM")) {
                        (MainFrame.blist).removeElement(selectedItem);

                        // gets the new list in bgm jlist
    //                    int listBGMSize = (MainFrame.listBGM).getModel().getSize();
    //                    MainFrame.strBGM = "";
    //
    //                    for(int ctr = 0; ctr < listBGMSize; ctr++){
    //                        if(ctr == 0) {
    //                            MainFrame.strBGM = (MainFrame.listBGM).getModel().getElementAt(ctr);
    //                        }
    //                        else if(ctr > 0 && ctr <= (listBGMSize - 1)) {
    //                            MainFrame.strBGM = MainFrame.strBGM + ":" + (MainFrame.listBGM).getModel().getElementAt(ctr);
    //                        }
    //                    }
    //                    
    //                    // save automatically after deletion
    //                    Profile profile = new Profile();
    //                    HappyButtons.profileDB[HappyButtons.loadedDB] = new ProfileDatabase();
    //                    (HappyButtons.dbo).saveEnvironment(HappyButtons.profileDB, profile);
                    }
                    else if(selectedType.equals("SFX")) {
                        (MainFrame.slist).removeElement(selectedItem);

                        // gets the new list in sfx jlist
    //                    int listSFXSize = (MainFrame.listSFX).getModel().getSize();
    //                    MainFrame.strSFX = "";
    //
    //                    for(int ctr = 0; ctr < listSFXSize; ctr++){
    //                        if(ctr == 0) {
    //                            MainFrame.strSFX = (MainFrame.listSFX).getModel().getElementAt(ctr);
    //                        }
    //                        else if(ctr > 0 && ctr <= (listSFXSize - 1)) {
    //                            MainFrame.strSFX = MainFrame.strSFX + ":" + (MainFrame.listSFX).getModel().getElementAt(ctr);
    //                        }
    //                    }
    //                    
    //                    // save automatically after deletion
    //                    Profile profile = new Profile();
    //                    HappyButtons.profileDB[HappyButtons.loadedDB] = new ProfileDatabase();
    //                    (HappyButtons.dbo).saveEnvironment(HappyButtons.profileDB, profile);
                    }

                    selectedItem = "";
                }
                else {
                    JOptionPane.showMessageDialog(HappyButtons.mf, 
                        "An error occurred when deleting " + selectedItem + ".wav", 
                        "File deletion error", 
                        JOptionPane.ERROR_MESSAGE);
                    selectedItem = "";
                }
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResourceManagerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResourceManagerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResourceManagerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResourceManagerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ResourceManagerFrame dialog = new ResourceManagerFrame(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblResources;
    // End of variables declaration//GEN-END:variables
}
