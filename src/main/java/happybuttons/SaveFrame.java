/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package happybuttons;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Michael Balibrea
 */
public class SaveFrame extends javax.swing.JDialog {
    public static String dbSlot1 = "", dbSlot2 = "", dbSlot3 = "", dbSlot4 = "", dbSlot5 = "";
    String theme = HappyButtons.uiTheme;
    int saveDone = 0; // if save button or manual save is done(1), else 0
    String bak1 = "", bak2 = "", bak3 = "", bak4 = "", bak5 = ""; // bak is used to 
    /**
     * Creates new form Save
     */
    public SaveFrame(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        super.setTitle("Save to profile");
        initComponents();
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/3-this.getSize().height/2);
        
        // set frame icon
        ImageIcon imgIcon = new ImageIcon(HappyButtons.documentsPathDoubleSlash + Utility.strDoubleSlash("\\HappyButtons\\res\\icon\\wave.png"));
        setIconImage(imgIcon.getImage());
        
        reloadDB(HappyButtons.profileDB);
        
        // add listener when window is disposing
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                if(saveDone == 0) {
                    if(MainFrame.loadedIndexProfile == 0) {
                        tfSaveProfile1.setText(dbSlot1);
                        (MainFrame.savingProfile) = dbSlot1;
                    }
                    else if(MainFrame.loadedIndexProfile == 1) {
                        tfSaveProfile2.setText(dbSlot2);
                        (MainFrame.savingProfile) = dbSlot2;
                    }
                    else if(MainFrame.loadedIndexProfile == 2) {
                        tfSaveProfile3.setText(dbSlot3);
                        (MainFrame.savingProfile) = dbSlot3;
                    }
                    else if(MainFrame.loadedIndexProfile == 3) {
                        tfSaveProfile4.setText(dbSlot4);
                        (MainFrame.savingProfile) = dbSlot4;
                    }
                    else if(MainFrame.loadedIndexProfile == 4) {
                        tfSaveProfile5.setText(dbSlot5);
                        (MainFrame.savingProfile) = dbSlot5;
                    }
                }
            }
        });
        
        setupTheme();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new javax.swing.JPanel();
        tfSaveProfile1 = new javax.swing.JTextField();
        btnSave1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        panel6 = new javax.swing.JPanel();
        tfSaveProfile2 = new javax.swing.JTextField();
        btnSave2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        panel7 = new javax.swing.JPanel();
        tfSaveProfile3 = new javax.swing.JTextField();
        btnSave3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        panel8 = new javax.swing.JPanel();
        tfSaveProfile4 = new javax.swing.JTextField();
        btnSave4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        panel9 = new javax.swing.JPanel();
        tfSaveProfile5 = new javax.swing.JTextField();
        btnSave5 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(543, 212));
        setMinimumSize(new java.awt.Dimension(543, 212));
        setResizable(false);

        panel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        tfSaveProfile1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnSave1.setText("Save here");
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SLOT 1");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfSaveProfile1))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(btnSave1)
                .addGap(41, 41, 41))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfSaveProfile1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        tfSaveProfile2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnSave2.setText("Save here");
        btnSave2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("SLOT 2");

        javax.swing.GroupLayout panel6Layout = new javax.swing.GroupLayout(panel6);
        panel6.setLayout(panel6Layout);
        panel6Layout.setHorizontalGroup(
            panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfSaveProfile2))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel6Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(btnSave2)
                .addGap(41, 41, 41))
        );
        panel6Layout.setVerticalGroup(
            panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfSaveProfile2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        tfSaveProfile3.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnSave3.setText("Save here");
        btnSave3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave3ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("SLOT 3");

        javax.swing.GroupLayout panel7Layout = new javax.swing.GroupLayout(panel7);
        panel7.setLayout(panel7Layout);
        panel7Layout.setHorizontalGroup(
            panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfSaveProfile3))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel7Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(btnSave3)
                .addGap(41, 41, 41))
        );
        panel7Layout.setVerticalGroup(
            panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfSaveProfile3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        tfSaveProfile4.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnSave4.setText("Save here");
        btnSave4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave4ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("SLOT 4");

        javax.swing.GroupLayout panel8Layout = new javax.swing.GroupLayout(panel8);
        panel8.setLayout(panel8Layout);
        panel8Layout.setHorizontalGroup(
            panel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfSaveProfile4))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel8Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(btnSave4)
                .addGap(41, 41, 41))
        );
        panel8Layout.setVerticalGroup(
            panel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfSaveProfile4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        tfSaveProfile5.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnSave5.setText("Save here");
        btnSave5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave5ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("SLOT 5");

        javax.swing.GroupLayout panel9Layout = new javax.swing.GroupLayout(panel9);
        panel9.setLayout(panel9Layout);
        panel9Layout.setHorizontalGroup(
            panel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfSaveProfile5))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel9Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(btnSave5)
                .addGap(41, 41, 41))
        );
        panel9Layout.setVerticalGroup(
            panel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfSaveProfile5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

       
    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
        DBOperations.indexDB = 0;
        Profile profile = new Profile();
        
        (MainFrame.savingProfile) = tfSaveProfile1.getText();
        
        if((MainFrame.savingProfile).equals("")) {
            Notification panel = new Notification(HappyButtons.mf, 
                Notification.Type.WARNING, 
                MainFrame.location, 
                "Empty profile name",
                "Please provide SLOT 1 name"
            );
            panel.showNotification();
            saveDone = 0;
        }
        else if(((MainFrame.savingProfile).equalsIgnoreCase(dbSlot2) || (MainFrame.savingProfile).equalsIgnoreCase(dbSlot3) || 
                (MainFrame.savingProfile).equalsIgnoreCase(dbSlot4) || (MainFrame.savingProfile).equalsIgnoreCase(dbSlot5)) && 
                !(MainFrame.savingProfile).equals("")
                ) {
            Notification panel = new Notification(HappyButtons.mf, 
                Notification.Type.WARNING, 
                MainFrame.location, 
                "Duplicate name",
                "SLOT 1 name matches other slot name"
            );
            panel.showNotification();
            saveDone = 0;
        }
        else {
            int confirm = JOptionPane.showConfirmDialog(HappyButtons.mf, 
                "Save in this slot? This cannot be undone", 
                "Save item", 
                JOptionPane.YES_NO_OPTION);
            
            if(confirm == 0) {
                HappyButtons.profileDB[0] = new ProfileDatabase();
                (HappyButtons.dbo).saveEnvironment(HappyButtons.profileDB, profile);

                Notification panel = new Notification(HappyButtons.mf, 
                    Notification.Type.SUCCESS, 
                    MainFrame.location, 
                    "Success",
                    "Profile saved!"
                );
                panel.showNotification();
                saveDone = 1;

                this.dispose();
            }
        }
    }//GEN-LAST:event_btnSave1ActionPerformed

    private void btnSave2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave2ActionPerformed
        DBOperations.indexDB = 1;
        Profile profile = new Profile();
        
        (MainFrame.savingProfile) = tfSaveProfile2.getText();
        
        if((MainFrame.savingProfile).equals("")) {
            Notification panel = new Notification(HappyButtons.mf, 
                Notification.Type.WARNING, 
                MainFrame.location, 
                "Empty profile name",
                "Please provide SLOT 2 name"
            );
            panel.showNotification();
            saveDone = 0;
        }
        else if(((MainFrame.savingProfile).equalsIgnoreCase(dbSlot1) || (MainFrame.savingProfile).equalsIgnoreCase(dbSlot3) || 
                (MainFrame.savingProfile).equalsIgnoreCase(dbSlot4) || (MainFrame.savingProfile).equalsIgnoreCase(dbSlot5)) && 
                !(MainFrame.savingProfile).equals("")
                ) {
            Notification panel = new Notification(HappyButtons.mf, 
                Notification.Type.WARNING, 
                MainFrame.location, 
                "Duplicate name",
                "SLOT 2 name matches other slot name"
            );
            panel.showNotification();
            saveDone = 0;
        }
        else {
            int confirm = JOptionPane.showConfirmDialog(HappyButtons.mf, 
                "Save in this slot? This cannot be undone", 
                "Save item", 
                JOptionPane.YES_NO_OPTION);
            
            if(confirm == 0) {
                HappyButtons.profileDB[1] = new ProfileDatabase();
                (HappyButtons.dbo).saveEnvironment(HappyButtons.profileDB, profile);

                Notification panel = new Notification(HappyButtons.mf, 
                    Notification.Type.SUCCESS, 
                    MainFrame.location, 
                    "Success",
                    "Profile saved!"
                );
                panel.showNotification();
                saveDone = 1;

                this.dispose();
            }
        }
    }//GEN-LAST:event_btnSave2ActionPerformed

    private void btnSave3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave3ActionPerformed
        DBOperations.indexDB = 2;
        Profile profile = new Profile();
        
        (MainFrame.savingProfile) = tfSaveProfile3.getText();
        
        if((MainFrame.savingProfile).equals("")) {
            Notification panel = new Notification(HappyButtons.mf, 
                Notification.Type.WARNING, 
                MainFrame.location, 
                "Empty profile name",
                "Please provide SLOT 3 name"
            );
            panel.showNotification();
            saveDone = 0;
        }
        else if(((MainFrame.savingProfile).equalsIgnoreCase(dbSlot1) || (MainFrame.savingProfile).equalsIgnoreCase(dbSlot2) || 
                (MainFrame.savingProfile).equalsIgnoreCase(dbSlot4) || (MainFrame.savingProfile).equalsIgnoreCase(dbSlot5)) && 
                !(MainFrame.savingProfile).equals("")
                ) {
            Notification panel = new Notification(HappyButtons.mf, 
                Notification.Type.WARNING, 
                MainFrame.location, 
                "Duplicate name",
                "SLOT 3 name matches other slot name"
            );
            panel.showNotification();
            saveDone = 0;
//            System.out.println("1: " + dbSlot1 + "\n2: " + dbSlot2 + "\n3: " + dbSlot3 + "\n4: " + dbSlot4 + "\n5: " + dbSlot5);
        }
        else {
            int confirm = JOptionPane.showConfirmDialog(HappyButtons.mf, 
                "Save in this slot? This cannot be undone", 
                "Save item", 
                JOptionPane.YES_NO_OPTION);
            
            if(confirm == 0) {
                HappyButtons.profileDB[2] = new ProfileDatabase();
                (HappyButtons.dbo).saveEnvironment(HappyButtons.profileDB, profile);

                Notification panel = new Notification(HappyButtons.mf, 
                    Notification.Type.SUCCESS, 
                    MainFrame.location, 
                    "Success",
                    "Profile saved!"
                );
                panel.showNotification();
                saveDone = 1;

                this.dispose();
            }
        }
    }//GEN-LAST:event_btnSave3ActionPerformed

    private void btnSave4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave4ActionPerformed
        DBOperations.indexDB = 3;
        Profile profile = new Profile();
        
        (MainFrame.savingProfile) = tfSaveProfile4.getText();
        
        if((MainFrame.savingProfile).equals("")) {
            Notification panel = new Notification(HappyButtons.mf, 
                Notification.Type.WARNING, 
                MainFrame.location, 
                "Empty profile name",
                "Please provide SLOT 4 name"
            );
            panel.showNotification();
            saveDone = 0;
        }
        else if(((MainFrame.savingProfile).equalsIgnoreCase(dbSlot1) || (MainFrame.savingProfile).equalsIgnoreCase(dbSlot2) || 
                (MainFrame.savingProfile).equalsIgnoreCase(dbSlot3) || (MainFrame.savingProfile).equalsIgnoreCase(dbSlot5)) && 
                !(MainFrame.savingProfile).equals("")
                ) {
            Notification panel = new Notification(HappyButtons.mf, 
                Notification.Type.WARNING, 
                MainFrame.location, 
                "Duplicate name",
                "SLOT 4 name matches other slot name"
            );
            panel.showNotification();
            saveDone = 0;
        }
        else {
            int confirm = JOptionPane.showConfirmDialog(HappyButtons.mf, 
                "Save in this slot? This cannot be undone", 
                "Save item", 
                JOptionPane.YES_NO_OPTION);
            
            if(confirm == 0) {
                HappyButtons.profileDB[3] = new ProfileDatabase();
                (HappyButtons.dbo).saveEnvironment(HappyButtons.profileDB, profile);

                Notification panel = new Notification(HappyButtons.mf, 
                    Notification.Type.SUCCESS, 
                    MainFrame.location, 
                    "Success",
                    "Profile saved!"
                );
                panel.showNotification();
                saveDone = 1;

                this.dispose();
            }
        }
    }//GEN-LAST:event_btnSave4ActionPerformed

    private void btnSave5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave5ActionPerformed
        DBOperations.indexDB = 4;
        Profile profile = new Profile();
        
        (MainFrame.savingProfile) = tfSaveProfile5.getText();
        
        if((MainFrame.savingProfile).equals("")) {
            Notification panel = new Notification(HappyButtons.mf, 
                Notification.Type.WARNING, 
                MainFrame.location, 
                "Empty profile name",
                "Please provide SLOT 5 name"
            );
            panel.showNotification();
            saveDone = 0;
        }
        else if(((MainFrame.savingProfile).equalsIgnoreCase(dbSlot1) || (MainFrame.savingProfile).equalsIgnoreCase(dbSlot2) || 
                (MainFrame.savingProfile).equalsIgnoreCase(dbSlot3) || (MainFrame.savingProfile).equalsIgnoreCase(dbSlot4)) && 
                !(MainFrame.savingProfile).equals("")
                ) {
            Notification panel = new Notification(HappyButtons.mf, 
                Notification.Type.WARNING, 
                MainFrame.location, 
                "Duplicate name",
                "SLOT 5 name matches other slot name"
            );
            panel.showNotification();
            saveDone = 0;
        }
        else {
            int confirm = JOptionPane.showConfirmDialog(HappyButtons.mf, 
                "Save in this slot? This cannot be undone", 
                "Save item", 
                JOptionPane.YES_NO_OPTION);
            
            if(confirm == 0) {
                HappyButtons.profileDB[4] = new ProfileDatabase();
                (HappyButtons.dbo).saveEnvironment(HappyButtons.profileDB, profile);

                Notification panel = new Notification(HappyButtons.mf, 
                    Notification.Type.SUCCESS, 
                    MainFrame.location, 
                    "Success",
                    "Profile saved!"
                );
                panel.showNotification();
                saveDone = 1;

                this.dispose();
            }
        }
    }//GEN-LAST:event_btnSave5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaveFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaveFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaveFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaveFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SaveFrame dialog = new SaveFrame(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    public void reloadDB(ProfileDatabase profileDB[]){
        int loop;
        
        for(loop = 0; loop < 5; loop++){
            try{
                if(loop == 0){
                    if(profileDB[loop].getProfileName() == ""){
                        dbSlot1 = "";
                    }
                    else {
                        dbSlot1 = profileDB[loop].getProfileName();
                    }
                    
                    tfSaveProfile1.setText(dbSlot1);
                    bak1 = dbSlot1;
                }
                else if(loop == 1){
                    if(profileDB[loop].getProfileName() == ""){
                        dbSlot2 = "";
                    }
                    else {
                        dbSlot2 = profileDB[loop].getProfileName();
                    }
                    
                    tfSaveProfile2.setText(dbSlot2);
                    bak2 = dbSlot2;
                }
                else if(loop == 2){
                    if(profileDB[loop].getProfileName() == ""){
                        dbSlot3 = "";
                    }
                    else {
                        dbSlot3 = profileDB[loop].getProfileName();
                    }
                    
                    tfSaveProfile3.setText(dbSlot3);
                    bak3 = dbSlot3;
                }
                else if(loop == 3){
                    if(profileDB[loop].getProfileName() == ""){
                        dbSlot4 = "";
                    }
                    else {
                        dbSlot4 = profileDB[loop].getProfileName();
                    }
                    
                    tfSaveProfile4.setText(dbSlot4);
                    bak4 = dbSlot4;
                }
                else if(loop == 4){
                    if(profileDB[loop].getProfileName() == ""){
                        dbSlot5 = "";
                    }
                    else {
                        dbSlot5 = profileDB[loop].getProfileName();
                    }
                    
                    tfSaveProfile5.setText(dbSlot5);
                    bak5 = dbSlot5;
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(HappyButtons.mf, 
                    "Databse might be renamed or changed externally or might be deleted\n\nSystem err:\n" + e.toString(), 
                    "Database error", 
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    private void setupTheme() {
        if(theme.equals("light")) {
            // ------------------------------------------------------------------------------- PANELS
            this.getContentPane().setBackground(new JDialog().getBackground());
            
            panel1.setBackground(new JPanel().getBackground());
            panel1.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY));
            
            panel6.setBackground(new JPanel().getBackground());
            panel6.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY));
            
            panel7.setBackground(new JPanel().getBackground());
            panel7.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY));
            
            panel8.setBackground(new JPanel().getBackground());
            panel8.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY));
            
            panel9.setBackground(new JPanel().getBackground());
            panel9.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY));
            
            // ------------------------------------------------------------------------------- LABELS
            jLabel1.setBackground(new JLabel().getBackground());
            jLabel1.setForeground(new JLabel().getForeground());
            
            jLabel3.setBackground(new JLabel().getBackground());
            jLabel3.setForeground(new JLabel().getForeground());
            
            jLabel4.setBackground(new JLabel().getBackground());
            jLabel4.setForeground(new JLabel().getForeground());
            
            jLabel5.setBackground(new JLabel().getBackground());
            jLabel5.setForeground(new JLabel().getForeground());
            
            jLabel6.setBackground(new JLabel().getBackground());
            jLabel6.setForeground(new JLabel().getForeground());
            
            // ------------------------------------------------------------------------------- BUTTONS
            btnSave1.setBackground(new JButton().getBackground());
            btnSave1.setForeground(new JButton().getForeground());
            
            btnSave2.setBackground(new JButton().getBackground());
            btnSave2.setForeground(new JButton().getForeground());
            
            btnSave3.setBackground(new JButton().getBackground());
            btnSave3.setForeground(new JButton().getForeground());
            
            btnSave4.setBackground(new JButton().getBackground());
            btnSave4.setForeground(new JButton().getForeground());
            
            btnSave5.setBackground(new JButton().getBackground());
            btnSave5.setForeground(new JButton().getForeground());
            
            // ------------------------------------------------------------------------------- TEXT FIELDS
            tfSaveProfile1.setBackground(new JTextField().getBackground());
            tfSaveProfile1.setForeground(new JTextField().getForeground());
            
            tfSaveProfile2.setBackground(new JTextField().getBackground());
            tfSaveProfile2.setForeground(new JTextField().getForeground());
            
            tfSaveProfile3.setBackground(new JTextField().getBackground());
            tfSaveProfile3.setForeground(new JTextField().getForeground());
            
            tfSaveProfile4.setBackground(new JTextField().getBackground());
            tfSaveProfile4.setForeground(new JTextField().getForeground());
            
            tfSaveProfile5.setBackground(new JTextField().getBackground());
            tfSaveProfile5.setForeground(new JTextField().getForeground());
        }
        else if(theme.equals("dark")) {
            // ------------------------------------------------------------------------------- PANELS
            this.getContentPane().setBackground(Color.DARK_GRAY);
            
            panel1.setBackground(Color.DARK_GRAY);
            panel1.setBorder(BorderFactory.createLineBorder(Color.GRAY));
            
            panel6.setBackground(Color.DARK_GRAY);
            panel6.setBorder(BorderFactory.createLineBorder(Color.GRAY));
            
            panel7.setBackground(Color.DARK_GRAY);
            panel7.setBorder(BorderFactory.createLineBorder(Color.GRAY));
            
            panel8.setBackground(Color.DARK_GRAY);
            panel8.setBorder(BorderFactory.createLineBorder(Color.GRAY));
            
            panel9.setBackground(Color.DARK_GRAY);
            panel9.setBorder(BorderFactory.createLineBorder(Color.GRAY));
            
            // ------------------------------------------------------------------------------- LABELS
            jLabel1.setBackground(Color.DARK_GRAY);
            jLabel1.setForeground(Color.LIGHT_GRAY);
            
            jLabel3.setBackground(Color.DARK_GRAY);
            jLabel3.setForeground(Color.LIGHT_GRAY);
            
            jLabel4.setBackground(Color.DARK_GRAY);
            jLabel4.setForeground(Color.LIGHT_GRAY);
            
            jLabel5.setBackground(Color.DARK_GRAY);
            jLabel5.setForeground(Color.LIGHT_GRAY);
            
            jLabel6.setBackground(Color.DARK_GRAY);
            jLabel6.setForeground(Color.LIGHT_GRAY);
            
            // ------------------------------------------------------------------------------- BUTTONS
            btnSave1.setBackground(Color.GRAY);
            btnSave1.setForeground(Color.DARK_GRAY);
//            btnSave1.setBorder(new LineBorder(Color.LIGHT_GRAY, 2));
//            btnSave1.setUI(new DarkThemeButton());
            
            btnSave2.setBackground(Color.GRAY);
            btnSave2.setForeground(Color.DARK_GRAY);
//            
            btnSave3.setBackground(Color.GRAY);
            btnSave3.setForeground(Color.DARK_GRAY);
//            
            btnSave4.setBackground(Color.GRAY);
            btnSave4.setForeground(Color.DARK_GRAY);
//            
            btnSave5.setBackground(Color.GRAY);
            btnSave5.setForeground(Color.DARK_GRAY);
            
            // ------------------------------------------------------------------------------- TEXT FIELDS
            tfSaveProfile1.setBackground(Color.DARK_GRAY);
            tfSaveProfile1.setForeground(Color.LIGHT_GRAY);
            
            tfSaveProfile2.setBackground(Color.DARK_GRAY);
            tfSaveProfile2.setForeground(Color.LIGHT_GRAY);
            
            tfSaveProfile3.setBackground(Color.DARK_GRAY);
            tfSaveProfile3.setForeground(Color.LIGHT_GRAY);
            
            tfSaveProfile4.setBackground(Color.DARK_GRAY);
            tfSaveProfile4.setForeground(Color.LIGHT_GRAY);
            
            tfSaveProfile5.setBackground(Color.DARK_GRAY);
            tfSaveProfile5.setForeground(Color.LIGHT_GRAY);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave1;
    private javax.swing.JButton btnSave2;
    private javax.swing.JButton btnSave3;
    private javax.swing.JButton btnSave4;
    private javax.swing.JButton btnSave5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel6;
    private javax.swing.JPanel panel7;
    private javax.swing.JPanel panel8;
    private javax.swing.JPanel panel9;
    private javax.swing.JTextField tfSaveProfile1;
    private javax.swing.JTextField tfSaveProfile2;
    private javax.swing.JTextField tfSaveProfile3;
    private javax.swing.JTextField tfSaveProfile4;
    private javax.swing.JTextField tfSaveProfile5;
    // End of variables declaration//GEN-END:variables
    
//    static class DarkThemeButton extends JButton {
//        public DarkThemeButton() {
//            if(theme.equals("light")) {
//                setColor(new JButton().getBackground());
//                setForeground(Color.DARK_GRAY);
//                colorOver = new Color(128, 128, 128);
//                colorClick = new Color(255, 255, 255); // white
//                borderColor = new Color(192, 192, 192);
//            }
//            else if(theme.equals("dark")) {
//                setColor(Color.DARK_GRAY);
//                setForeground(Color.LIGHT_GRAY);
//                colorOver = new Color(128, 128, 128);
//                colorClick = new Color(255, 255, 255); // white
//                borderColor = new Color(192, 192, 192);
//            }
//            
//            setContentAreaFilled(false);
//            
//            // Mouse listeners
//            addMouseListener(new MouseAdapter() {
//                @Override
//                public void mouseEntered(MouseEvent me) {
//                    if(isEnabled()) {
//                        setBackground(colorOver);
//                        over = true;
//                    }
//                }
//                
//                @Override
//                public void mouseExited(MouseEvent me) {
//                    if(isEnabled()) {
//                        setBackground(color);
//                        over = false;
//                    }
//                }
//                
//                @Override
//                public void mousePressed(MouseEvent me) {
//                    if(isEnabled()) {
//                        setBackground(colorClick);
//                    }
//                }
//                
//                @Override
//                public void mouseReleased(MouseEvent me) {
//                    if(isEnabled()) {
//                        if(over) {
//                            setBackground(colorOver);
//                        }
//                        else {
//                            setBackground(color);
//                        }
//                    }
//                }
//            });
//        }
//        
//        public boolean isOver() {
//            return over;
//        }
//
//        public void setOver(boolean over) {
//            this.over = over;
//        }
//
//        public Color getColor() {
//            return color;
//        }
//
//        public void setColor(Color color) {
//            this.color = color;
//            setBackground(color);
//        }
//
//        public Color getColorOver() {
//            return colorOver;
//        }
//
//        public void setColorOver(Color colorOver) {
//            this.colorOver = colorOver;
//        }
//
//        public Color getColorClick() {
//            return colorClick;
//        }
//
//        public void setColorClick(Color colorClick) {
//            this.colorClick = colorClick;
//        }
//
//        public Color getBorderColor() {
//            return borderColor;
//        }
//
//        public void setBorderColor(Color borderColor) {
//            this.borderColor = borderColor;
//        }
//
//        public int getRadius() {
//            return radius;
//        }
//
//        public void setRadius(int radius) {
//            this.radius = radius;
//        }
//        
//        private boolean over;
//        private Color color;
//        private Color colorOver;
//        private Color colorClick;
//        private Color borderColor;
//        private int radius = 5;
//
//        @Override
//        protected void paintComponent(Graphics grphcs) {
//            Graphics2D g2 = (Graphics2D) grphcs;
//            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
//            // Paint Border
//            g2.setColor(borderColor);
//            g2.fillRoundRect(0, 0, getWidth(), getHeight(), radius, radius);
//            g2.setColor(getBackground());
//            // Border set 2 Pix
//            g2.fillRoundRect(2, 2, getWidth() - 4,  getHeight() - 4, radius, radius);
//            
//            super.paintComponent(grphcs);
//        }
//    }
}
