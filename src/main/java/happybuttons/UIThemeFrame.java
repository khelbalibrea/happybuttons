/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package happybuttons;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JSlider;
import javax.swing.JTextField;
import javax.swing.border.TitledBorder;

/**
 *
 * @author Michael Balibrea
 */
public class UIThemeFrame extends javax.swing.JDialog {
    String theme = HappyButtons.uiTheme;
    String selectedTheme = theme;
    /**
     * Creates new form UIThemeFrame
     */
    public UIThemeFrame(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        super.setTitle("Themes");
        initComponents();
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/3-this.getSize().height/2);
        
        modelTextfield.setText("Textfield");
        
        // set frame icon
        ImageIcon imgIcon = new ImageIcon(HappyButtons.documentsPathDoubleSlash + Utility.strDoubleSlash("\\HappyButtons\\res\\icon\\wave.png"));
        setIconImage(imgIcon.getImage());
        
        setupTheme();
        setModelTheme();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panel1 = new javax.swing.JPanel();
        lblSelectTheme = new javax.swing.JLabel();
        panelBox = new javax.swing.JPanel();
        chkLight = new javax.swing.JRadioButton();
        chkDark = new javax.swing.JRadioButton();
        btnApply = new javax.swing.JButton();
        modelPanel = new javax.swing.JPanel();
        modelLabel = new javax.swing.JLabel();
        modelTextfield = new javax.swing.JTextField();
        modelButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        modelList = new javax.swing.JList<>();
        modelSlider = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 300));
        setResizable(false);

        lblSelectTheme.setText("Select Theme:");

        buttonGroup1.add(chkLight);
        chkLight.setText("Light (Default)");
        chkLight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkLightActionPerformed(evt);
            }
        });

        buttonGroup1.add(chkDark);
        chkDark.setText("Dark");
        chkDark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDarkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBoxLayout = new javax.swing.GroupLayout(panelBox);
        panelBox.setLayout(panelBoxLayout);
        panelBoxLayout.setHorizontalGroup(
            panelBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBoxLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panelBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkDark)
                    .addComponent(chkLight))
                .addContainerGap(129, Short.MAX_VALUE))
        );
        panelBoxLayout.setVerticalGroup(
            panelBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBoxLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(chkLight)
                .addGap(18, 18, 18)
                .addComponent(chkDark)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnApply.setText("Apply");
        btnApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(lblSelectTheme)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnApply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(lblSelectTheme)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnApply)
                .addContainerGap())
        );

        modelPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        modelLabel.setText("Label:");

        modelTextfield.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        modelTextfield.setFocusable(false);
        modelTextfield.setName("modelTextfield"); // NOI18N
        modelTextfield.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                modelTextfieldPropertyChange(evt);
            }
        });
        modelTextfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                modelTextfieldKeyPressed(evt);
            }
        });

        modelButton.setText("Button");

        modelList.setBorder(javax.swing.BorderFactory.createTitledBorder("LIST MODEL"));
        modelList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(modelList);

        javax.swing.GroupLayout modelPanelLayout = new javax.swing.GroupLayout(modelPanel);
        modelPanel.setLayout(modelPanelLayout);
        modelPanelLayout.setHorizontalGroup(
            modelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(modelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(modelPanelLayout.createSequentialGroup()
                        .addComponent(modelLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(modelTextfield)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(modelSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE))
                .addContainerGap())
        );
        modelPanelLayout.setVerticalGroup(
            modelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(modelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelLabel)
                    .addComponent(modelTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelButton))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(modelSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modelPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(modelPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void chkLightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkLightActionPerformed
        selectedTheme = "light";
        setModelTheme();
    }//GEN-LAST:event_chkLightActionPerformed

    private void chkDarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDarkActionPerformed
        selectedTheme = "dark";
        setModelTheme();
    }//GEN-LAST:event_chkDarkActionPerformed

    private void modelTextfieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_modelTextfieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_modelTextfieldKeyPressed

    private void modelTextfieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_modelTextfieldPropertyChange

    }//GEN-LAST:event_modelTextfieldPropertyChange

    private void btnApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyActionPerformed
        HappyButtons.uiTheme = selectedTheme;

        UIProfile ui = new UIProfile();
        HappyButtons.dbo.autoSaveUISettings(HappyButtons.uiDB, ui);

        SystemClass.UITheme(HappyButtons.uiTheme);
        theme = selectedTheme;
        setupTheme();
    }//GEN-LAST:event_btnApplyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UIThemeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UIThemeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UIThemeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UIThemeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UIThemeFrame dialog = new UIThemeFrame(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private void setupTheme() {
        // Setting up theme
        if(theme.equals("light")) {
            // ------------------------------------------------------------------------------- PANELS
            panel1.setBackground(new JPanel().getBackground());
            panelBox.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY));
            
            panelBox.setBackground(new JPanel().getBackground());
            panelBox.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY));
            
            // ------------------------------------------------------------------------------- RADIO BUTTONS
            chkLight.setBackground(new JRadioButton().getBackground());
            chkLight.setForeground(new JRadioButton().getForeground());
            
            chkDark.setBackground(new JRadioButton().getBackground());
            chkDark.setForeground(new JRadioButton().getForeground());
            
            // ------------------------------------------------------------------------------- BUTTONS
            btnApply.setBackground(new JButton().getBackground());
            btnApply.setForeground(new JButton().getForeground());
            
            // ------------------------------------------------------------------------------- LABELS
            lblSelectTheme.setBackground(new JLabel().getBackground());
            lblSelectTheme.setForeground(new JLabel().getForeground());
            lblSelectTheme.setOpaque(true);
            
            chkLight.setSelected(true);
        }
        if(theme.equals("dark")) {
            // ------------------------------------------------------------------------------- PANELS
            panel1.setBackground(Color.DARK_GRAY);
            panelBox.setBorder(BorderFactory.createLineBorder(Color.GRAY));
            
            panelBox.setBackground(Color.DARK_GRAY);
            panelBox.setBorder(BorderFactory.createLineBorder(Color.GRAY));
            
            // ------------------------------------------------------------------------------- RADIO BUTTONS
            chkLight.setBackground(Color.DARK_GRAY);
            chkLight.setForeground(Color.LIGHT_GRAY);
            
            chkDark.setBackground(Color.DARK_GRAY);
            chkDark.setForeground(Color.LIGHT_GRAY);
            
            // ------------------------------------------------------------------------------- BUTTONS
            btnApply.setBackground(Color.GRAY);
            btnApply.setForeground(Color.WHITE);
            
            // ------------------------------------------------------------------------------- LABELS
            lblSelectTheme.setBackground(Color.DARK_GRAY);
            lblSelectTheme.setForeground(Color.LIGHT_GRAY);
            lblSelectTheme.setOpaque(true);
            
            chkDark.setSelected(true);
        }
    }
    
    private void setModelTheme() {
        if(selectedTheme.equals("light")) {
            // ------------------------------------------------------------------------------- PANELS
            modelPanel.setBackground(new JPanel().getBackground());
            modelPanel.setBackground(new JPanel().getBackground());
            
            // ------------------------------------------------------------------------------- LABELS
            modelLabel.setBackground(new JLabel().getBackground());
            modelLabel.setForeground(new JLabel().getForeground());
            modelLabel.setOpaque(true);
            
            // ------------------------------------------------------------------------------- BUTTONS
            modelButton.setBackground(new JButton().getBackground());
            modelButton.setForeground(new JButton().getForeground());
            
            // ------------------------------------------------------------------------------- TEXT FIELDS
            modelTextfield.setBackground(new JTextField().getBackground());
            modelTextfield.setForeground(new JTextField().getForeground());
            
            // ------------------------------------------------------------------------------- LISTS
            modelList.setBackground(new JList().getBackground());
            modelList.setForeground(new JList().getForeground());
            modelList.setBorder(BorderFactory.createTitledBorder(null, 
                    "LIST MODEL", 
                    TitledBorder.LEFT, 
                    TitledBorder.TOP, 
                    new Font("segoe", Font.BOLD,12), 
                    new JList().getForeground()));
            
            // ------------------------------------------------------------------------------- SLIDER
            modelSlider.setBackground(new JSlider().getBackground());
        }
        else if(selectedTheme.equals("dark")) {
            // ------------------------------------------------------------------------------- PANELS
            modelPanel.setBackground(Color.DARK_GRAY);
            modelPanel.setBackground(Color.DARK_GRAY);
            
            // ------------------------------------------------------------------------------- LABELS
            modelLabel.setBackground(Color.DARK_GRAY);
            modelLabel.setForeground(Color.LIGHT_GRAY);
            modelLabel.setOpaque(true);
            
            // ------------------------------------------------------------------------------- BUTTONS
            modelButton.setBackground(Color.GRAY);
            modelButton.setForeground(Color.WHITE);
            
            // ------------------------------------------------------------------------------- TEXT FIELDS
            modelTextfield.setBackground(Color.DARK_GRAY);
            modelTextfield.setForeground(Color.LIGHT_GRAY);
            
            // ------------------------------------------------------------------------------- LISTS
            modelList.setBackground(Color.DARK_GRAY);
            modelList.setForeground(Color.LIGHT_GRAY);
            modelList.setBorder(BorderFactory.createTitledBorder(null, 
                    "LIST MODEL", 
                    TitledBorder.LEFT, 
                    TitledBorder.TOP, 
                    new Font("segoe", Font.BOLD,12), 
                    Color.LIGHT_GRAY));
            
            // ------------------------------------------------------------------------------- SLIDER
            modelSlider.setBackground(Color.DARK_GRAY);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnApply;
    private javax.swing.ButtonGroup buttonGroup1;
    public static javax.swing.JRadioButton chkDark;
    public static javax.swing.JRadioButton chkLight;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JLabel lblSelectTheme;
    public static javax.swing.JButton modelButton;
    public static javax.swing.JLabel modelLabel;
    private javax.swing.JList<String> modelList;
    public static javax.swing.JPanel modelPanel;
    private javax.swing.JSlider modelSlider;
    public static javax.swing.JTextField modelTextfield;
    public static javax.swing.JPanel panel1;
    public static javax.swing.JPanel panelBox;
    // End of variables declaration//GEN-END:variables
}
